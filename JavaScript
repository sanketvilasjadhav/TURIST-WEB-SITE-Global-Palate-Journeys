document.addEventListener('DOMContentLoaded', () => {
    // 1. Responsive Navigation (Hamburger Menu)
    const hamburger = document.querySelector('.hamburger-menu');
    const navLinks = document.querySelector('.nav-links');

    if (hamburger && navLinks) {
        hamburger.addEventListener('click', () => {
            navLinks.classList.toggle('active');
            hamburger.classList.toggle('active'); // Animate hamburger icon
        });
    }

    // Close nav on link click (for mobile)
    navLinks.querySelectorAll('a').forEach(link => {
        link.addEventListener('click', () => {
            if (navLinks.classList.contains('active')) {
                navLinks.classList.remove('active');
                hamburger.classList.remove('active');
            }
        });
    });

    // 2. Sticky Header (Optional, if you want header to change on scroll)
    const header = document.querySelector('.main-header');
    if (header) {
        window.addEventListener('scroll', () => {
            if (window.scrollY > 50) { // Adjust scroll threshold as needed
                header.style.backgroundColor = 'rgba(255, 255, 255, 0.95)';
                header.style.boxShadow = '0 4px 20px rgba(0,0,0,0.1)';
            } else {
                header.style.backgroundColor = 'var(--card-bg)';
                header.style.boxShadow = '0 2px 10px rgba(0,0,0,0.05)';
            }
        });
    }

    // 3. Smooth Scrolling for Anchor Links (if applicable)
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
            e.preventDefault();

            document.querySelector(this.getAttribute('href')).scrollIntoView({
                behavior: 'smooth'
            });
        });
    });

    // 4. Form Validation Example (for Login/Register or Contact)
    // This is a basic example. For a real app, use more robust validation.
    const loginForm = document.getElementById('loginForm'); // Assuming you have a form with this ID
    if (loginForm) {
        loginForm.addEventListener('submit', (e) => {
            e.preventDefault(); // Prevent default form submission

            const email = loginForm.querySelector('input[type="email"]').value;
            const password = loginForm.querySelector('input[type="password"]').value;

            if (email === '' || !email.includes('@')) {
                alert('Please enter a valid email address.');
                return;
            }
            if (password.length < 6) {
                alert('Password must be at least 6 characters long.');
                return;
            }

            alert('Login successful! (This is a dummy validation)');
            // In a real application, you would send this data to a backend.
        });
    }

    // 5. Testimonial Carousel (Basic example - for more, consider a library like Swiper.js)
    const testimonialCarousel = document.querySelector('.testimonial-carousel');
    if (testimonialCarousel) {
        let currentSlide = 0;
        const testimonialCards = testimonialCarousel.querySelectorAll('.testimonial-card');

        // Simple next/prev buttons (you'd add these to your HTML)
        // const nextBtn = document.getElementById('nextTestimonial');
        // const prevBtn = document.getElementById('prevTestimonial');

        // function showSlide(index) {
        //     testimonialCards.forEach((card, i) => {
        //         card.style.display = (i === index) ? 'block' : 'none';
        //     });
        // }

        // nextBtn.addEventListener('click', () => {
        //     currentSlide = (currentSlide + 1) % testimonialCards.length;
        //     showSlide(currentSlide);
        // });

        // prevBtn.addEventListener('click', () => {
        //     currentSlide = (currentSlide - 1 + testimonialCards.length) % testimonialCards.length;
        //     showSlide(currentSlide);
        // });

        // showSlide(currentSlide); // Show initial slide

        // Auto-slide (optional)
        // setInterval(() => {
        //     currentSlide = (currentSlide + 1) % testimonialCards.length;
        //     showSlide(currentSlide);
        // }, 5000); // Change slide every 5 seconds
    }


    // 6. AOS Initialization (if using AOS library)
    // Make sure you link the AOS CSS and JS in your HTML head/body.
    // AOS.init({
    //     once: true, // only animate once
    //     duration: 800, // animation duration
    // });

});

// Optional: Parallax Effect for Hero Section (more advanced)
// window.addEventListener('scroll', () => {
//     const heroSection = document.querySelector('.hero-section');
//     if (heroSection) {
//         let scrollPosition = window.pageYOffset;
//         heroSection.style.backgroundPositionY = -scrollPosition * 0.5 + 'px';
//     }
// });
